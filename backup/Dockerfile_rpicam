# Use the ROS Humble base image
#FROM ros:humble-ros-base
FROM ros:humble-ros-base

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive

SHELL ["/bin/bash", "-c"]

# Upgrade everything
RUN apt-get update && apt-get upgrade -y

# Install necessary dependencies
RUN apt-get remove meson
RUN apt-get install -y \
    python3-vcstool \
    python3-rosdep \
    python3-pip \
    build-essential \
    cmake \
    v4l-utils \
    git \
    wget \
    udev \
    gdb

# Install libcamera dependencies
RUN apt-get install -y \
    libboost-program-options-dev  \
    libgnutls28-dev openssl libtiff5-dev pybind11-dev \
    qtbase5-dev libqt5core5a libqt5gui5 libqt5widgets5 \
    python3-yaml python3-ply \
    ninja-build
RUN python3 -m pip install meson jinja2

# Build libcamera
# COPY /libcamera /libcamera/
RUN git clone https://github.com/raspberrypi/libcamera.git
WORKDIR /libcamera
RUN meson setup build --buildtype=release -Dpipelines=rpi/vc4,rpi/pisp -Dipas=rpi/vc4,rpi/pisp -Dv4l2=true -Dgstreamer=disabled -Dtest=false -Dlc-compliance=disabled -Dcam=disabled -Dqcam=disabled -Ddocumentation=disabled -Dpycamera=enabled
RUN ninja -C build
RUN sudo ninja -C build install

# Install custom rpicam-apps dependencies
RUN apt-get install -y \
    libdrm-dev libexif-dev libpng-dev \
    ros-${ROS_DISTRO}-image-transport \
    ros-${ROS_DISTRO}-image-transport-plugins

# Copy rpicam-apps repo from host
COPY /rpicam-apps /rpicam-apps/

# Build custom rpicam-apps
WORKDIR /rpicam-apps
RUN source /opt/ros/${ROS_DISTRO}/setup.bash && \
    meson setup build -Denable_libav=disabled -Denable_drm=enabled -Denable_egl=disabled -Denable_qt=disabled -Denable_opencv=disabled -Denable_tflite=disabled -Denable_hailo=disabled
RUN meson compile -C build
RUN meson install -C build
RUN ldconfig

# Download the .repos and clone packages
# WORKDIR /ros2_ws/src
# RUN wget https://raw.githubusercontent.com/bobzwik/GuideRPiVIO/main/ros2.repos && \
#     vcs import --recursive < ros2.repos

# Install pigpio (needed for cpp_imu_sub)
# WORKDIR /
# RUN git clone https://github.com/joan2937/pigpio && \
#     cd pigpio && \
#     make && \
#     make install

# Download libcamera and camera_ros
# WORKDIR /ros2_ws/src
# RUN git clone https://github.com/raspberrypi/libcamera.git && \
#     git clone https://github.com/bobzwik/camera_ros.git
# Use latest libcamera tag with "vX.X.X" format
# WORKDIR /ros2_ws/src/libcamera
# RUN git fetch --tags && \
#     latestTag=$(git tag --list 'v*.*.*' | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1) && \
#     git checkout $latestTag

# Install dependencies for the workspace 
# WORKDIR /ros2_ws
# RUN apt-get update && \
#     rosdep update && \
#     rosdep install --rosdistro ${ROS_DISTRO} --from-paths src --ignore-src -y --skip-keys pigpio --skip-keys libcamera

# Build the workspace
# RUN source /opt/ros/${ROS_DISTRO}/setup.bash && \
#     colcon build

# Source the ROS files and ROS workspace build files, for every opened shell
RUN echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> /etc/bash.bashrc
# RUN echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> /etc/bash.bashrc && \
#     echo "source /ros2_ws/install/setup.bash" >> /etc/bash.bashrc

# RUN apt-get install -y \
#     gdb



# Copy entrypoint script into the image
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

RUN rm -rf /var/lib/apt/lists/*

# Set the default entrypoint
ENTRYPOINT ["/entrypoint.sh"]

# Default command (can be overridden)
CMD ["bash"]
